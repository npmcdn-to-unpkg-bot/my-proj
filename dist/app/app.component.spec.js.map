{"version":3,"sources":["app.component.spec.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,8BAA6B,iBAAiB,CAAC,CAAA;AAE/C,wBAKO,uBAAuB,CAAC,CAAA;AAE/B,wBAAqC,2BAA2B,CAAC,CAAA;AAEjE,iCAA+B,2BAA2B,CAAC,CAAA;AAK3D,8BAA8B;AAE9B,eAAe;AACf,kBAAQ,CAAC,YAAY,EAAE;IACrB,YAAE,CAAC,2BAA2B,EAAE;QAC9B,gBAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,uBAAuB,EAAE;IAChC,YAAE,CAAC,8BAA8B,EAAE;QACjC,gBAAM,CAAC,IAAI,4BAAY,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,uBAAuB,EAAE;IAEhC,YAAE,CAAC,8BAA8B,EAC/B,eAAK,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAC,GAAyB;QAE/D,GAAG,CAAC,WAAW,CAAC,4BAAY,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;YACxC,gBAAM,CAAC,OAAO,CAAC,iBAAiB,YAAY,4BAAY,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,4BAA4B,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC;IAEL,YAAE,CAAC,gCAAgC,EACjC,eAAK,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAC,GAAyB;QAE7D,GAAG,CAAC,WAAW,CAAC,4BAAY,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;YAC1C,2FAA2F;YAE3F,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,IAAI,KAAK,IAAI,EAAhB,CAAgB,CAAC,CAAC,aAAa,CAAC,CAAE,WAAW;YAEnF,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAY,YAAY;YAExF,gBAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,iDAAiD,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"app.component.spec.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {\r\n  expect, it, iit, xit,\r\n  describe, ddescribe, xdescribe,\r\n  beforeEach, beforeEachProviders, withProviders,\r\n  async, inject\r\n} from '@angular/core/testing';\r\n\r\nimport { TestComponentBuilder } from '@angular/compiler/testing';\r\n\r\nimport { By }             from '@angular/platform-browser';\r\nimport { provide }        from '@angular/core';\r\nimport { ViewMetadata }   from '@angular/core';\r\nimport { PromiseWrapper } from '@angular/core/src/facade/promise';\r\n\r\n////////  SPECS  /////////////\r\n\r\n/// Delete this\r\ndescribe('Smoke test', () => {\r\n  it('should run a passing test', () => {\r\n    expect(true).toEqual(true, 'should pass');\r\n  });\r\n});\r\n\r\ndescribe('AppComponent with new', function () {\r\n  it('should instantiate component', () => {\r\n    expect(new AppComponent()).toBeDefined('Whoopie!');\r\n  });\r\n});\r\n\r\ndescribe('AppComponent with TCB', function () {\r\n\r\n  it('should instantiate component',\r\n    async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\r\n\r\n    tcb.createAsync(AppComponent).then(fixture => {\r\n      expect(fixture.componentInstance instanceof AppComponent).toBe(true, 'should create AppComponent');\r\n    });\r\n  })));\r\n\r\n  it('should have expected <h1> text',\r\n    async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\r\n\r\n      tcb.createAsync(AppComponent).then(fixture => {\r\n      // fixture.detectChanges();  // would need to resolve a binding but we don't have a binding\r\n\r\n      let h1 = fixture.debugElement.query(el => el.name === 'h1').nativeElement;  // it works\r\n\r\n          h1 = fixture.debugElement.query(By.css('h1')).nativeElement;            // preferred\r\n\r\n      expect(h1.innerText).toMatch(/angular 2 app/i, '<h1> should say something about \"Angular 2 App\"');\r\n    });\r\n\r\n  })));\r\n});\r\n"],"sourceRoot":"/source/"}